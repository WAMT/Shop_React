[{"/Users/junholee/Documents/github/Shop_React/src/index.js":"1","/Users/junholee/Documents/github/Shop_React/src/reportWebVitals.js":"2","/Users/junholee/Documents/github/Shop_React/src/App.js":"3","/Users/junholee/Documents/github/Shop_React/src/data.js":"4","/Users/junholee/Documents/github/Shop_React/src/Detail.js":"5"},{"size":646,"mtime":1677483796719,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1677234187802,"results":"8","hashOfConfig":"7"},{"size":4605,"mtime":1678874327237,"results":"9","hashOfConfig":"7"},{"size":663,"mtime":1677483539824,"results":"10","hashOfConfig":"7"},{"size":1582,"mtime":1678593388695,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"10vs1xz",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"15"},"/Users/junholee/Documents/github/Shop_React/src/index.js",[],[],[],"/Users/junholee/Documents/github/Shop_React/src/reportWebVitals.js",[],[],"/Users/junholee/Documents/github/Shop_React/src/App.js",["29","30","31"],[],"/Users/junholee/Documents/github/Shop_React/src/data.js",[],[],"/Users/junholee/Documents/github/Shop_React/src/Detail.js",["32","33","34"],[],"import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './App.css';\n// let YellowBtn = styled.button`\n//     background: yellow;\n//     color: black;\n//     padding: 10px;\n// `;\n\nfunction Detail(props) {\n    let { id } = useParams();\n    let finded = props.art.find((x) => x.id == id);\n    let [visible, setVisible] = useState(true);\n    let [num, setNum] = useState('');\n\n    useEffect(() => {\n        setTimeout(() => {\n            setVisible(false);\n        }, 2000);\n    }, []);\n    useEffect(() => {\n        if (isNaN(num)) {\n            alert('한글쓰지마라');\n        }\n    }, [num]);\n    return (\n        <div className='container'>\n            <div>\n                {visible == true ? (\n                    <div className='alert alert-warning'>\n                        2초 이내 구매시 할인\n                    </div>\n                ) : null}\n            </div>\n\n            <input\n                onChange={(e) => {\n                    setNum(e.target.value);\n                }}\n            ></input>\n            <div className='row'>\n                <div className='col-top-1'>\n                    <img src={finded.src} width='100%' />\n                </div>\n                <div className='col-top-1'>\n                    <h4 className='pt-5'>{finded.title}</h4>\n                    <p>{finded.content}</p>\n                    <p>가격: OFFER</p>\n                    <button className='btn btn-danger'>주문하기</button>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Detail;\n",{"ruleId":"35","severity":1,"message":"36","line":19,"column":46,"nodeType":"37","messageId":"38","endLine":19,"endColumn":62},{"ruleId":"39","severity":1,"message":"40","line":113,"column":13,"nodeType":"41","endLine":113,"endColumn":65},{"ruleId":"42","severity":1,"message":"43","line":120,"column":10,"nodeType":"44","messageId":"45","endLine":120,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":12,"column":45,"nodeType":"48","messageId":"49","endLine":12,"endColumn":47},{"ruleId":"46","severity":1,"message":"47","line":29,"column":26,"nodeType":"48","messageId":"49","endLine":29,"endColumn":28},{"ruleId":"39","severity":1,"message":"40","line":43,"column":21,"nodeType":"41","endLine":43,"endColumn":58},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'MidArt2' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]